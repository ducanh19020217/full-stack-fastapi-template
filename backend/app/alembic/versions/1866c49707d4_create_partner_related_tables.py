"""create partner related tables

Revision ID: 1866c49707d4
Revises: d777852dede4
Create Date: 2025-08-07 09:32:03.631879

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '1866c49707d4'
down_revision = 'd777852dede4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('partner_event',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recommendations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('target_type', sa.Enum('EVENT', 'PARTNER', 'PARTNER_EVENT', name='recommendationtargettype'), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('approved_by', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('delegation_member',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('event_id', sa.Uuid(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('position', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('is_representative', sa.Boolean(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['partner_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_delegation_member_id'), 'delegation_member', ['id'], unique=False)
    op.create_table('event',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('exchange_level', sa.Enum('low', 'medium', 'high', 'top', name='exchangelevel'), nullable=False),
    sa.Column('related_documents', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('additional_info', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('status', sa.Enum('scheduled', 'completed', 'cancelled', name='eventstatus'), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eventschedule',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('event_id', sa.Uuid(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('detail', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('attachment', sa.JSON(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['partner_event.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_eventschedule_id'), 'eventschedule', ['id'], unique=False)
    op.create_table('partner',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('contact_email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('contact_phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('contact_address', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('contact_personal_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('contact_personal_phone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('contact_personal_email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', 'pending', name='partnerstatus'), nullable=False),
    sa.Column('created_by', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('partner')
    op.drop_index(op.f('ix_eventschedule_id'), table_name='eventschedule')
    op.drop_table('eventschedule')
    op.drop_table('event')
    op.drop_index(op.f('ix_delegation_member_id'), table_name='delegation_member')
    op.drop_table('delegation_member')
    op.drop_table('recommendations')
    op.drop_table('partner_event')
    # ### end Alembic commands ###
